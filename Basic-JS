// Passing Values to Functions with Arguments
function functionWithArgs(a, b) {
    console.log(a+b);
}

functionWithArgs(1, 2)

functionWithArgs(7, 9)

// Global Scope and Functions
var myGlobal = (10);

function fun1() {
    oopsGlobal = (5);
}

function fun2() {
    var output = "";
    if (typeof myGlobal != "undefined") {
        output += "myGlobal: " + myGlobal;
    }
    if (typeof oopsGlobal != "undefined") {
        output += " oopsGlobal: " + oopsGlobal;
    }
    console.log(output);
}

// Local Scope and Functions
function myLocalScope() {
    var myVar = "apple";
    console.log(myVar);
}

myLocalScope();

console.log(myVar);

// Global vs. Local Scope in Functions
var outerWear = "T-Shirt";

function myOutfit() {
    var outerWear = "sweater";
    return outerWear;
}

myOutfit();

// Return a Value from a Function with Return
function timesFive(num) {
    return num * 5
}

var answer = timesFive(5)

// Understanding Undefined Value returned from a Function
var sum = 0;

function addThree() {
    sum = sum + 3;
}

function addFive () {
    sum = sum + 5;
}

addThree();
addFive();

// Assignment with a Returned Value
var processed = 0;

function processArg(num) {
    return (num + 3) / 5;
}

var processed = processArg(7);

// Stand in Line
