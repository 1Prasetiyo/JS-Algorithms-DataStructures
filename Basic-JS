// Passing Values to Functions with Arguments
function functionWithArgs(a, b) {
    console.log(a+b);
}

functionWithArgs(1, 2)

functionWithArgs(7, 9)

// Global Scope and Functions
var myGlobal = (10);

function fun1() {
    oopsGlobal = (5);
}

function fun2() {
    var output = "";
    if (typeof myGlobal != "undefined") {
        output += "myGlobal: " + myGlobal;
    }
    if (typeof oopsGlobal != "undefined") {
        output += " oopsGlobal: " + oopsGlobal;
    }
    console.log(output);
}

// Local Scope and Functions
function myLocalScope() {
    var myVar = "apple";
    console.log(myVar);
}

myLocalScope();

console.log(myVar);

// Global vs. Local Scope in Functions
var outerWear = "T-Shirt";

function myOutfit() {
    var outerWear = "sweater";
    return outerWear;
}

myOutfit();

// Return a Value from a Function with Return
function timesFive(num) {
    return num * 5
}

var answer = timesFive(5)

// Understanding Undefined Value returned from a Function
var sum = 0;

function addThree() {
    sum = sum + 3;
}

function addFive () {
    sum = sum + 5;
}

addThree();
addFive();

// Assignment with a Returned Value
var processed = 0;

function processArg(num) {
    return (num + 3) / 5;
}

var processed = processArg(7);

// Stand in Line
function nextInLine(arr, item) {
    arr.push(item);
    return arr.shift();
}

var testArr = [1,2,3,4,5];

console.log("Before: " + JSON.stringify(testArr));
console.log(nextInLine(testArr, 6));
console.log("After: " + JSON.stringify(testArr));

// Understanding Boolean Values
function welcomeToBooleans() {
    return true;
}

// Use Conditional Logic with If Statements
function trueOrFalse(wasThatTrue) {
    if (wasThatTrue) {
      return "Yes, that was true";
    }
    return "No, that was false";
}

// Comparison with the Equality Operator
function testEqual(val) {
    if (val ==12) {
      return "Equal";
    }
    return "Not Equal";
}

testEqual(10);

// Comparison with the Strict Equality Operator
function testStrict(val) {
    if (val === 7) {
      return "Equal";
    }
    return "Not Equal";
}

testStrict(10);

// Practice comparing different values
// Setup
function compareEquality(a, b) {
    if (a === b) { 
      return "Equal";
    }
    return "Not Equal";
}

compareEquality(10, "10");

// Comparison with the Inequality Operator
function testNotEqual(val) {
    if (val != 99) { 
      return "Not Equal";
    }
    return "Equal";
}

testNotEqual(10);

// Comparison with the Strict Inequality Operator
function testStrictNotEqual(val) {
    if (val !== 17) { 
      return "Not Equal";
    }
    return "Equal";
}

testStrictNotEqual(10);

// Comparison with the Greater Than Operator
function testGreaterThan(val) {
    if (val > 100) { 
      return "Over 100";
    }

    if (val > 10) {
      return "Over 10";
    }

    return "10 or Under";
}

testGreaterThan(10);

// Comparison with the Greater Than Or Equal To Operator
function testGreaterOrEqual(val) {
    if (val >= 20) { 
      return "20 or Over";
    }

    if (val >= 10) { 
      return "10 or Over";
    }

    return "Less than 10";
}

testGreaterOrEqual(10);

// Comparison with the Less Than Operator
function testLessThan(val) {
    if (val <25) {  
      return "Under 25";
    }

    if (val <55) {  
      return "Under 55";
    }

    return "55 or Over";
}

testLessThan(10);

// Comparison with the Less Than Or Equal To Operator
function testLessOrEqual(val) {
    if (val <= 12) { 
      return "Smaller Than or Equal to 12";
    }

    if (val <= 24) { 
      return "Smaller Than or Equal to 24";
    }

    return "More Than 24";
}

testLessOrEqual(10);

// Comparisons with the Logical And Operator
function testLogicalAnd(val) {
    if (val >= 25 && val <= 50) {
      return "Yes";
    }
    return "No";
}

testLogicalAnd(10);

// Comparisons with the Logical Or Operator
function testLogicalOr(val) {
    if (val < 10 || val > 20) {
      return "Outside";
    }
    return "Inside";
}

testLogicalOr(15);

// Introducing Else Statements
function testElse(val) {
    var result = "";
    if (val > 5) {
      result = "Bigger than 5";
    }

    else {
      result = "5 or Smaller";
    }

    return result;
}

testElse(4);

// Introducing Else If Statements
function testElseIf(val) {
  if (val > 10) {
    return "Greater than 10";
  }

  else if (val < 5) {
    return "Smaller than 5";
  }

  else {
    return "Between 5 and 10";
  }
}

testElseIf(7);

// Logical Order in If Else Statements
function orderMyLogic(val) {
  if (val < 5) {
    return "Less than 5";
  } else if (val < 10) {
    return "Less than 10";
  } else {
    return "Greater than or equal to 10";
  }
}

orderMyLogic(4);

// Chaining If Else Statements
function testSize(num) {
  if (num < 5) {
    return "Tiny";
  } else if (num < 10) {
    return "Small";
  } else if (num < 15) {
    return "Medium";
  } else if (num < 20)  {
    return "Large";
  } else if (num >= 20) {
    return "Huge";
  } else {
    return "huge";
  }
}

testSize(7);

// Golf Code
var names = ["Hole-in-one", "Eagle", "Birdie", " Par", "Bogey", "Double Bogey", "Go Home!"];

function golfScore(par, strokes) {
    return strokes == 1
    ? names[0]
    : strokes <= par - 2
    ? names[1]
    : strokes == par - 1
    ? names[2]
    : strokes == par
    ? names[3]
    : strokes == par + 1
    ? names[4]
    : strokes == par + 2
    ? names[5]
    : strokes >= par + 3
    ? names[6]: "";
}

golfScore(5, 4);

// Selecting from Many Options with Switch Statements
